initSidebarItems({"enum":[["Error","Error type for parsing"],["KeyValuePairs","A set of `(Key, Value)` pairs which can exist in a merged or unmerged variant"],["MergeBehaviour","Merge behaviour when parsing HCL Documents"],["OneOrMany","Either a single value, or many values"],["Value","Value in HCL"]],"fn":[["body",""],["parse_reader","Parse a HCL string from a IO stream reader"],["parse_slice","Parse a HCL string from a slice of bytes"],["parse_str","Parse a HCL string into a [`Value`] which is close to an abstract syntax tree of the HCL string."]],"macro":[["inline_whitespace",""],["map_err","`map_err_str(IResult<I, O, u32>) -> IResult<I, O, Error>`"],["map_err_str","`map_err_str(IResult<I, O, u32>) -> IResult<I, O, Error>`"],["whitespace",""]],"mod":[["constants",""],["iter","Iterator Types and implementations for data structures In general, you should not need to instantiate these types manually"],["literals","Tokens and literals"],["serde","Serializer and Deserializer for HCL"],["value",""]],"trait":[["AsOwned","Type which has borrowed content which is able to be turned into an Owned version"],["Mergeable","Type is mergeable"],["ScalarLength","Has scalar length"]],"type":[["Body","A HCL document body"]]});